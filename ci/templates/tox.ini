[tox]
envlist =
    clean,
    check,
{% for env in tox_environments|sort %}
    {{ env }},
{% endfor %}
    report,
    docs

[testenv]
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
deps =
    pytest
    pytest-capturelog
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:py.test -vv --ignore=src}

[testenv:spell]
setenv =
    SPELLCHECK = 1
commands =
    sphinx-build -b spelling docs dist/docs
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
whitelist_externals =
    rm
commands =
    rm -rf dist/docs || rmdir /S /Q dist\docs
    sphinx-build -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt

[testenv:configure]
deps =
    jinja2
    matrix
usedevelop = true
commands =
    python bootstrap.py

[testenv:check]
basepython = python3.4
deps =
    docutils
    check-manifest
    flake8
    collective.checkdocs
    pygments
usedevelop = true
commands =
    python setup.py checkdocs
    python setup.py check --strict --metadata
    check-manifest {toxinidir}
    flake8 src

[testenv:coveralls]
deps =
    coveralls
usedevelop = true
commands =
    coverage combine
    coverage report
    coveralls --merge=extension-coveralls.json

[testenv:extension-coveralls]
deps =
    cpp-coveralls
usedevelop = true
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json

[testenv:report]
basepython = python3.4
commands =
    coverage combine
    coverage report
usedevelop = true
deps = coverage

[testenv:clean]
commands = coverage erase
usedevelop = true
deps = coverage

{% for env, config in tox_environments|dictsort %}
[testenv:{{ env }}]
basepython = {{ config.python }}
{% if config.cover or config.env_vars %}
setenv =
    {[testenv]setenv}
{% endif %}
{% for var in config.env_vars %}
    {{ var }}
{% endfor %}
{% if config.cover %}
    WITH_COVERAGE=yes
    CFLAGS=-coverage
usedevelop = true
commands =
    python setup.py clean --all build_ext --force --inplace
    {posargs:py.test --cov=src --cov-report=term-missing -vv}
{% endif %}
{% if config.cover or config.deps %}
deps =
    {[testenv]deps}
{% endif %}
{% if config.cover %}
    pytest-cov
{% endif %}
{% for dep in config.deps %}
    {{ dep }}
{% endfor %}

{% endfor %}


